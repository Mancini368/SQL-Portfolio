Analyze a year's worth of sales from a pizza restauraunt, including peak times and product performance using BigQuery.

-- I started by sketching out an ERD diagram to determine relationships between primary keys and foreign keys among the 4 tables and datatypes for each column; order_details, orders, pizzas and pizza_types.
-- I began exploration, cleaning and analysis in BigQuery as follows:
  
SELECT * FROM `sql-project-1-383101.pizza_sales.order_details`;
SELECT * FROM `sql-project-1-383101.pizza_sales.orders`;
SELECT * FROM `sql-project-1-383101.pizza_sales.pizza_type`;
SELECT * FROM `sql-project-1-383101.pizza_sales.pizzas`;

-- ALTER TABLE TO CHANGE COLUMN NAMES FOR APPROPRIATE NAMING CONVENTIONS  
CREATE TABLE pizza_sales.pizza_type
AS SELECT
  string_field_0 AS pizza_type_id,
  string_field_1 AS name,
  string_field_2 AS category,
  string_field_3 AS ingredients
FROM
  pizza_sales.pizza_types;

-- EXPLORE TABLES
SELECT *
FROM `sql-project-1-383101.pizza_sales.orders` AS orders
JOIN `sql-project-1-383101.pizza_sales.order_details` AS order_details
  ON orders.order_id=order_details.order_id
JOIN `sql-project-1-383101.pizza_sales.pizzas` AS pizzas
  ON order_details.pizza_id=pizzas.pizza_id
JOIN `sql-project-1-383101.pizza_sales.pizza_type` AS pizza_type
  ON pizzas.pizza_type_id=pizza_type.pizza_type_id
;

SELECT COUNT(*) FROM `sql-project-1-383101.pizza_sales.orders`;       
SELECT COUNT(*) FROM `sql-project-1-383101.pizza_sales.order_details` 


-- WHAT ARE THE TOTAL PIZZA ORDERS FOR EACH DATE & DAY OF THE WEEK? ORDER FROM MOST ORDERS PER DAY TO LEAST.
 SELECT
  date,
  SUM(order_details.quantity) AS total_order_quantity,
  COUNT(DISTINCT orders.order_id) AS orders_per_day,
  FORMAT_TIMESTAMP('%A', date) AS day_of_week
FROM `sql-project-1-383101.pizza_sales.orders` AS orders
JOIN `sql-project-1-383101.pizza_sales.order_details` AS order_details
  ON orders.order_id = order_details.order_id
GROUP BY date
ORDER BY total_order_quantity DESC;
 
 
-- HOW MANY PIZZA ORDERS ON AVERAGE PER DAY OF WEEK? 
SELECT 
  EXTRACT(DAYOFWEEK FROM date) AS day_of_week, 
  CASE EXTRACT(DAYOFWEEK FROM date)
    WHEN 1 THEN 'Sunday'
    WHEN 2 THEN 'Monday'
    WHEN 3 THEN 'Tuesday'
    WHEN 4 THEN 'Wednesday'
    WHEN 5 THEN 'Thursday'
    WHEN 6 THEN 'Friday'
    WHEN 7 THEN 'Saturday'
  END AS day_of_week_name,
  AVG(order_count) AS average_orders_per_day
FROM (
  SELECT 
    date,
    COUNT(DISTINCT orders.order_id ) AS order_count
  FROM `sql-project-1-383101.pizza_sales.orders` AS orders
  GROUP BY date
)
GROUP BY day_of_week, day_of_week_name
ORDER BY average_orders_per_day DESC;


 -- WHAT ARE THE PEAK BUISNESS HOURS?
SELECT
  EXTRACT(HOUR FROM TIMESTAMP(DATETIME(orders.date, orders.time))) AS hour_of_day,
       COUNT(*) AS order_count
FROM `sql-project-1-383101.pizza_sales.orders` AS orders
GROUP BY hour_of_day
ORDER BY order_count DESC;


-- HOW MANY PIZZA ORDERS ON AVERAGE ARE TYPICALLY IN EACH TABLE ORDER? 
SELECT 
  AVG(pizza_count) AS average_pizzas_per_order
FROM (
  SELECT 
    orders.order_id, 
    SUM(order_details.quantity) AS pizza_count
  FROM `sql-project-1-383101.pizza_sales.order_details` AS order_details
  JOIN `sql-project-1-383101.pizza_sales.orders` AS orders
    ON orders.order_id = order_details.order_id
  GROUP BY orders.order_id
);


-- WHAT ARE THE BEST SELLING PIZZAS?
SELECT 
  order_details.pizza_id, 
  COUNT(*) AS total_table_orders,
  pizza_type.name,
  pizzas.price AS pizza_price,
  SUM(order_details.quantity) AS total_pizza_qty_ordered
FROM `sql-project-1-383101.pizza_sales.order_details` AS order_details
JOIN `sql-project-1-383101.pizza_sales.pizzas` AS pizzas
  ON order_details.pizza_id = pizzas.pizza_id
JOIN `sql-project-1-383101.pizza_sales.pizza_type` AS pizza_type
  ON pizzas.pizza_type_id = pizza_type.pizza_type_id
GROUP BY order_details.pizza_id, pizza_type.name, pizzas.price
ORDER BY total_pizza_qty_ordered DESC
LIMIT 10;


-- WHAT ARE THE HIGHEST REVENUE PRODUCING PIZZAS?
SELECT 
  order_details.pizza_id, 
  COUNT(*) AS total_table_orders,
  SUM(order_details.quantity) AS total_pizza_qty_ordered,
  pizza_type.name,
  pizzas.price AS pizza_price,
  SUM(order_details.quantity * pizzas.price) AS total_revenue
FROM `sql-project-1-383101.pizza_sales.order_details` AS order_details
JOIN `sql-project-1-383101.pizza_sales.pizzas` AS pizzas
  ON order_details.pizza_id = pizzas.pizza_id
JOIN `sql-project-1-383101.pizza_sales.pizza_type` AS pizza_type
  ON pizzas.pizza_type_id = pizza_type.pizza_type_id
GROUP BY order_details.pizza_id, pizza_type.name, pizzas.price
ORDER BY total_revenue DESC
LIMIT 10;


-- HOW MUCH MONEY WAS MADE THIS YEAR?
SELECT 
  SUM(order_details.quantity * pizzas.price) AS total_revenue
FROM `sql-project-1-383101.pizza_sales.order_details` AS order_details
JOIN `sql-project-1-383101.pizza_sales.pizzas` AS pizzas
  ON order_details.pizza_id = pizzas.pizza_id
;


-- IS THERE A SEASONALITY TO THE SALES? LOOKING AT SALES AGGREGATED BY MONTH, THEN QUARTER. 
SELECT 
  DATE_TRUNC(orders.date, MONTH) AS month,
  SUM(order_details.quantity * pizzas.price) AS total_revenue
FROM `sql-project-1-383101.pizza_sales.order_details` AS order_details
JOIN `sql-project-1-383101.pizza_sales.orders` AS orders
  ON orders.order_id = order_details.order_id
JOIN `sql-project-1-383101.pizza_sales.pizzas` AS pizzas
  ON order_details.pizza_id = pizzas.pizza_id
GROUP BY month
ORDER BY total_revenue
;


SELECT 
  EXTRACT(QUARTER FROM orders.date) AS quarter,
  SUM(order_details.quantity * pizzas.price) AS total_revenue
FROM `sql-project-1-383101.pizza_sales.order_details` AS order_details
JOIN `sql-project-1-383101.pizza_sales.orders` AS orders
  ON orders.order_id = order_details.order_id
JOIN `sql-project-1-383101.pizza_sales.pizzas` AS pizzas
  ON order_details.pizza_id = pizzas.pizza_id
GROUP BY quarter
ORDER BY quarter
;


-- WHAT ARE THE AVERAGE MONTHLY SALES?
SELECT 
  AVG(total_revenue) AS average_monthly_revenue
FROM (
  SELECT 
    DATE_TRUNC(orders.date, MONTH) AS month,
    SUM(order_details.quantity * pizzas.price) AS total_revenue
  FROM `sql-project-1-383101.pizza_sales.order_details` AS order_details
  JOIN `sql-project-1-383101.pizza_sales.orders` AS orders
    ON orders.order_id = order_details.order_id
  JOIN `sql-project-1-383101.pizza_sales.pizzas` AS pizzas
    ON order_details.pizza_id = pizzas.pizza_id
  GROUP BY month
);


-- WHAT ARE THE HIGHEST PRODUCING DAYS OF THE YEAR/ MOST PROFITABLE HOLIDAYS?
SELECT 
  orders.date,
  SUM(order_details.quantity * pizzas.price) AS total_revenue
FROM `sql-project-1-383101.pizza_sales.order_details` AS order_details
JOIN `sql-project-1-383101.pizza_sales.orders` AS orders
  ON orders.order_id = order_details.order_id
JOIN `sql-project-1-383101.pizza_sales.pizzas` AS pizzas
  ON order_details.pizza_id = pizzas.pizza_id
GROUP BY orders.date
ORDER BY total_revenue DESC
LIMIT 10;


-- ARE THERE ANY PIZZAS THAT SHOULD BE TAKEN OFF THE MENU? LETS LOOK AT THE PIZZAS ORDERED THE LEAST.
SELECT 
  order_details.pizza_id, 
  COUNT(*) AS total_table_orders,
  pizza_type.name,
  pizzas.price AS pizza_price,
  SUM(order_details.quantity) AS total_pizza_qty_ordered
FROM `sql-project-1-383101.pizza_sales.order_details` AS order_details
JOIN `sql-project-1-383101.pizza_sales.pizzas` AS pizzas
  ON order_details.pizza_id = pizzas.pizza_id
JOIN `sql-project-1-383101.pizza_sales.pizza_type` AS pizza_type
  ON pizzas.pizza_type_id = pizza_type.pizza_type_id
GROUP BY order_details.pizza_id, pizza_type.name, pizzas.price
ORDER BY total_pizza_qty_ordered
LIMIT 10;

-- DO PIZZAS ORDERED THE LEAST ALSO PRODUCE LOWEST SALES?
SELECT 
  order_details.pizza_id, 
  COUNT(*) AS total_table_orders,
  SUM(order_details.quantity) AS total_pizza_qty_ordered,
  pizza_type.name,
  pizzas.price AS pizza_price,
  SUM(order_details.quantity * pizzas.price) AS total_revenue
FROM `sql-project-1-383101.pizza_sales.order_details` AS order_details
JOIN `sql-project-1-383101.pizza_sales.pizzas` AS pizzas
  ON order_details.pizza_id = pizzas.pizza_id
JOIN `sql-project-1-383101.pizza_sales.pizza_type` AS pizza_type
  ON pizzas.pizza_type_id = pizza_type.pizza_type_id
GROUP BY order_details.pizza_id, pizza_type.name, pizzas.price
ORDER BY total_revenue
LIMIT 10;


                                                                    --*|FINAL ANALYSIS|*--

The busiest days of the week with the most pizzas ordered are Thursdays through Saturday, Friday being the top producing day with an average of 71 orders placed each Friday.
Sundays  & Tuesdays  are the slowest days having the least pizza orders placed.
Peak hours are at lunchtime between 12pm-1pm with an average of 2,520 orders placed and again at dinner at 6pm with an average of 2,399 orders placed. 
Additionally, Peak holidays with most pizza orders placed were on Thanksgiving, Black Friday and 4th of July.

The top 5 best selling pizzas for the year with largest quantity ordered are The Big Meat Pizza with a total of 1,176 orders, followed by The Thai Chicken Pizza, The Five Cheese Pizza, The Four Cheese Pizza and the Classic Deluxe Pizza. 
The top 5 revenue producing pizzas for the year are The Thai Chicken Pizza with total revenue of $29,257, followed by The Five Cheese Pizza, The Four Cheese Pizza, The Spicy Italian Pizza and The Big Meat Pizza. 

There was $817,860.05 in total revenue for the year 2015 with sales tracking consistently on a monthly and quarterly basis. 
Average monthly revenue is $68,155 with the lowest producing month in October at $64,028 and highest producing month in July at $72,558.
Top 5 highest revenue producing days of the year include Thanksgiving, Black Friday, July 3rd & 4th.

The pizzas with both lowest quantity sold and lowest revenue for the year are The Greek Pizza, The Green Garden Pizza, The Chicken Alfredo Pizza and The Calabrese Pizza.

